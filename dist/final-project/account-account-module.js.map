{"version":3,"sources":["./src/app/account/account-routing.module.ts","./src/app/account/account.component.ts","./src/app/account/account.component.html","./src/app/account/account.module.ts","./src/app/account/forgot-pwd.component.ts","./src/app/account/forgot-pwd.component.html","./src/app/account/login.component.ts","./src/app/account/login.component.html","./src/app/account/register.component.ts","./src/app/account/register.component.html"],"names":[],"mappings":"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","file":"account-account-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { RegistrationComponent } from './register.component';\nimport { LoginComponent } from './login.component';\n//import {  HeaderComponent } from '../header/header.component';\nimport { AccountComponent } from './account.component';\n\nimport { ForgotPasswordComponent } from './forgot-pwd.component';\n\nconst routes: Routes = [\n    {\n        //  path: '', component: HeaderComponent,\n        path: '', component: AccountComponent,\n\n        children: [\n            { path: 'login', component: LoginComponent },\n            { path: 'forgotpassword', component: ForgotPasswordComponent },\n            { path: 'register', component: RegistrationComponent },\n        ]\n    }\n];\n\n@NgModule({\n    imports: [RouterModule.forChild(routes)],\n    exports: [RouterModule]\n})\nexport class AccountRoutingModule { }","import { Component } from '@angular/core';\n\n@Component({ templateUrl: 'account.component.html' })\nexport class AccountComponent { }","\n    <router-outlet></router-outlet>\n","import { NgModule } from '@angular/core';\nimport { ReactiveFormsModule, } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\n\nimport { AlertService } from '../services/alert.service';\nimport { AccountService } from '../services/account.service'\n\nimport { AccountRoutingModule } from './account-routing.module';\nimport { RegistrationComponent } from './register.component';\nimport { LoginComponent } from './login.component';\nimport { ForgotPasswordComponent } from './forgot-pwd.component';\nimport { AccountComponent } from './account.component';\nimport { from } from 'rxjs';\n\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        ReactiveFormsModule,\n        AccountRoutingModule\n    ],\n    declarations: [\n        RegistrationComponent,\n        LoginComponent,\n        ForgotPasswordComponent,\n        AccountComponent,\n    ],\n    providers : [\n        // AlertService,\n        // AccountService\n    ]\n})\nexport class AccountModule { }","import { Component, OnInit } from '@angular/core';\nimport { FormGroup , FormBuilder ,  Validators} from '@angular/forms';\n\n@Component({\n  selector: 'app-forgot-password',\n  templateUrl: 'forgot-pwd.component.html',\n//   styleUrls: ['./forgot-password.component.css']\n})\nexport class ForgotPasswordComponent implements OnInit {\n  title = 'Reset Password';\n  myFormModel : FormGroup;\n  submitted = false;\n\n  onSubmit(){\n   \n    this.submitted = true;\n    console.log(this.myFormModel);\n   if (this.myFormModel.invalid){\n    alert('hello');\n     return\n   }\n   alert('SUCCESS!! :-)\\n\\n' + JSON.stringify(this.myFormModel.value,null,4));\n }\n\n  constructor(private formBuilder: FormBuilder) { }\n\n  ngOnInit(): void {\n    this.myFormModel = this.formBuilder.group({\n      email :['',[Validators.required,Validators.email]],\n      Password :['',[Validators.required,Validators.minLength(5)]],\n      ConfirmPassword :['',Validators.required],\n\n    });\n  }\n\n  get f(){\n    return this.myFormModel.controls\n  }\n  onReset(){\n    this.submitted = false;\n    this.myFormModel.reset();\n  }\n\n}\n","<div class=\"container\" style=\" margin-top: 30px;\">\n\n\n\n    <div class=\"d-flex justify-content-center\">\n        <div class=\"card m-3\">\n            <h4 class=\"card-header\" style=\"text-align: center;\"><i> {{ title }} </i> </h4>\n            <div class=\"card-body\">\n                <form [formGroup]=\"myFormModel\" (ngSubmit)=\"onSubmit()\">\n                    <div class=\"form-row\">\n                        <div class=\"form-group col-10\">\n                            <label>Email</label>\n                            <input type=\"text\" formControlName=\"email\"\n                                [ngClass]=\"{ 'is-invalid': submitted && f.email.errors }\" required class=\"form-control\">\n                        </div>\n                        <div class=\"form-row\">\n                            <div class=\"form-group col-10\">\n                                <label>Password</label>\n                                <input type=\"password\" formControlName=\"Password\" class=\"form-control\">\n\n                            </div>\n\n                        </div>\n                    </div>\n                    <div class=\"text-center\">\n                        <button class=\"btn btn-primary mr-1\">Submit</button>\n                        <button class=\"btn btn-secondary\" type=\"reset\" (click)=\"onReset()\">Clear</button>\n                    </div>\n\n                </form>\n            </div>\n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { first } from 'rxjs/operators';\nimport { AccountService } from '../services/account.service';\nimport { AlertService } from '../services/alert.service';\n\n\n@Component({\n  selector: 'app-login',\n  templateUrl: 'login.component.html',\n})\nexport class LoginComponent implements OnInit {\n  title = 'Login!';\n  myFormModel: FormGroup;\n  submitted = false;\n  loading = false;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private route: ActivatedRoute,\n    private router: Router,\n    private accountService: AccountService,\n    private alertService: AlertService\n  ) { }\n\n  ngOnInit() {\n    this.myFormModel = this.formBuilder.group({\n      username: ['', [Validators.required]],\n      password: ['', [Validators.required, Validators.minLength(5)]]\n    })\n  }\n\n\n  onSubmit() {\n    this.submitted = true;\n\n    // reset alerts on submit\n    this.alertService.clear();\n\n    // stop here if form is invalid\n    if (this.myFormModel.invalid) {\n      return;\n    }\n\n    this.loading = true;\n    this.accountService.login(this.f.username.value, this.f.password.value)\n      .pipe(first())\n      .subscribe({\n        next: () => {\n          // get return url from query parameters or default to home page\n          const returnUrl = this.route.snapshot.queryParams['returnUrl'] || '/';\n          this.router.navigateByUrl(returnUrl);\n        },\n        error: error => {\n          this.alertService.error(error);\n          this.loading = false;\n        }\n      });\n  }\n\n\n\n\n  get f() {\n    return this.myFormModel.controls\n  }\n  onReset() {\n    this.submitted = false;\n    this.myFormModel.reset();\n  }\n\n}\n","<div class=\"card\">\n    <h4 class=\"card-header\">Login</h4>\n    <div class=\"card-body\">\n        <form [formGroup]=\"myFormModel\" (ngSubmit)=\"onSubmit()\">\n            <div class=\"form-group\">\n                <label for=\"username\">Username</label>\n                <input type=\"text\" formControlName=\"username\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.username.errors }\" />\n                <div *ngIf=\"submitted && f.username.errors\" class=\"invalid-feedback\">\n                    <div *ngIf=\"f.username.errors.required\">Username is required</div>\n                </div>\n            </div>\n            <div class=\"form-group\">\n                <label for=\"password\">Password</label>\n                <input type=\"password\" formControlName=\"password\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.password.errors }\" />\n                <div *ngIf=\"submitted && f.password.errors\" class=\"invalid-feedback\">\n                    <div *ngIf=\"f.password.errors.required\">Password is required</div>\n                </div>\n            </div>\n            <div class=\"form-group\">\n                <button [disabled]=\"loading\" class=\"btn btn-primary\">\n                    <span *ngIf=\"loading\" class=\"spinner-border spinner-border-sm mr-1\"></span>\n                    Login\n                </button>\n                <a routerLink=\"../register\" class=\"btn btn-link\">Register</a>\n            </div>\n        </form>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\n\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { AccountService } from '../services/account.service';\nimport { first } from 'rxjs/operators';\nimport { AlertService } from '../services/alert.service';\n\n\n\n@Component({\n  selector: 'app-registration',\n  templateUrl: 'register.component.html',\n  // styleUrls: ['registration.component.css']\n})\n\nexport class RegistrationComponent implements OnInit {\n  title = 'Registration';\n\n  myFormModel: FormGroup;\n  form: FormGroup;\n\n  submitted = false;\n  loading = false;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private route: ActivatedRoute,\n    private router: Router,\n    private accountService: AccountService,\n    private alertService: AlertService\n  ) { }\n  ngOnInit() {\n    this.myFormModel = this.formBuilder.group({\n      fullName: ['', Validators.required],\n      username :['',Validators.required],\n      phonenumber: ['', Validators.required],\n      email: ['', [Validators.required, Validators.email]],\n\n      password: ['', [Validators.required, Validators.minLength(5)]],\n      confirmPassword: ['', Validators.required],\n      acceptTerms: [false, Validators.requiredTrue],\n    })\n  }\n\n\n\n  onSubmit() {\n\n    this.submitted = true;\n    if (this.myFormModel.invalid) {\n      return\n    }\n    this.loading = true;\n    this.accountService.register(this.myFormModel.value)\n      .pipe(first())\n      .subscribe({\n        next: () => {\n          this.alertService.success('Registration successful', { keepAfterRouteChange: true });\n          this.router.navigate(['../login'], { relativeTo: this.route });\n        },\n        error: error => {\n          this.alertService.error(error);\n          this.loading = false;\n        }\n      });\n  }\n\n\n  get f() {\n    return this.myFormModel.controls\n  }\n  onReset() {\n    this.submitted = false;\n    this.myFormModel.reset();\n  }\n\n}\n","<div class=\"d-flex justify-content-center\">\n    <div class=\"card m-3\">\n        <h4 class=\"card-header\" style=\"text-align: center;\"><i> {{ title }} </i> </h4>\n        <div class=\"card-body\">\n            <form [formGroup]=\"myFormModel\"\n            (ngSubmit)=\"onSubmit()\" >\n             <div class=\"form-row\">\n                <div class=\"form-group col-5\">\n                    <label>Full Name</label>\n                    <input type=\"text\" formControlName=\"fullName\" [ngClass]=\"{ 'is-invalid': submitted && f.fullName.errors }\" required  class=\"form-control\">\n                </div>\n                <div class=\"form-group col-5\">\n                    <label for=\"username\">Username</label>\n                    <input type=\"text\" formControlName=\"username\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.username.errors }\" />\n                    <div *ngIf=\"submitted && f.username.errors\" class=\"invalid-feedback\">\n                        <div *ngIf=\"f.username.errors.required\">Username is required</div>\n                    </div>\n                </div>\n                <div class=\"form-group col-5\" >\n                    <label>Phone number</label>\n                    <input type=\"text\"  formControlName=\"phonenumber\" [ngClass]=\"{ 'is-invalid': submitted && f.phonenumber.errors }\" required class=\"form-control\">\n                </div>\n            <div class=\"form-group col-10\">\n                <label>Email</label>\n                <input type=\"text\"  formControlName=\"email\" [ngClass]=\"{ 'is-invalid': submitted && f.email.errors }\" required class=\"form-control\">\n            </div>\n\n            \n             </div>\n                <div class=\"form-row\">\n                    <div class=\"form-group col-5\">\n                        <label>Password</label>\n                        <input type=\"password\" formControlName=\"password\"[ngClass]=\"{ 'is-invalid': submitted && f.password.errors }\" required class=\"form-control\">\n\n                    </div>\n                    <div class=\"form-group col-5\">\n                        <label>Confirm Password</label>\n                        <input type=\"password\" formControlName=\"confirmPassword\" [ngClass]=\"{ 'is-invalid': submitted && f.confirmPassword.errors }\" required class=\"form-control\">\n                    </div>\n                </div>\n                <div class=\"form-group form-check\">\n                    <input type=\"checkbox\" formControlName=\"acceptTerms\">\n                    <label for=\"acceptTerms\" class=\"form-check-label\">Accept Terms & Conditions</label>\n                    <div *ngIf=\"submitted && myFormModel.get('acceptTerms').errors\" required class=\"invalid-feedback\">Accept Ts & Cs is required</div>\n                </div>\n                <div class=\"text-center\">\n                    <button class=\"btn btn-primary mr-1\" >Register</button>\n                    <button class=\"btn btn-secondary\" type=\"reset\" (click)=\"onReset()\">Clear</button>\n                </div>\n            </form>\n        </div>\n\n    </div>\n\n</div>"],"sourceRoot":"webpack:///"}