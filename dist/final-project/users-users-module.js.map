{"version":3,"sources":["./src/app/users/add-edit.component.ts","./src/app/users/add-edit.component.html","./src/app/users/layout.component.ts","./src/app/users/layout.component.html","./src/app/users/list.component.ts","./src/app/users/list.component.html","./src/app/users/users-routing.module.ts","./src/app/users/users.module.ts"],"names":[],"mappings":"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","file":"users-users-module.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { first } from 'rxjs/operators';\n\nimport { AccountService} from '../services/account.service';\nimport { AlertService } from '../services/alert.service';\n\n@Component({ templateUrl: 'add-edit.component.html' })\nexport class AddEditComponent implements OnInit {\n    form: FormGroup;\n    id: string;\n    isAddMode: boolean;\n    loading = false;\n    submitted = false;\n\n    constructor(\n        private formBuilder: FormBuilder,\n        private route: ActivatedRoute,\n        private router: Router,\n        private accountService: AccountService,\n        private alertService: AlertService\n    ) {}\n\n    ngOnInit() {\n        this.id = this.route.snapshot.params['id'];\n        this.isAddMode = !this.id;\n        \n        // password not required in edit mode\n        const passwordValidators = [Validators.minLength(6)];\n        if (this.isAddMode) {\n            passwordValidators.push(Validators.required);\n        }\n\n        this.form = this.formBuilder.group({\n            firstName: ['', Validators.required],\n            phonenumber: ['', Validators.required],\n            email: ['', Validators.required],\n            password: ['', passwordValidators]\n        });\n\n        if (!this.isAddMode) {\n            this.accountService.getById(this.id)\n                .pipe(first())\n                .subscribe(x => this.form.patchValue(x));\n        }\n    }\n\n    // convenience getter for easy access to form fields\n    get f() { return this.form.controls; }\n\n    onSubmit() {\n        this.submitted = true;\n\n        // reset alerts on submit\n        this.alertService.clear();\n\n        // stop here if form is invalid\n        if (this.form.invalid) {\n            return;\n        }\n\n        this.loading = true;\n        if (this.isAddMode) {\n            this.createUser();\n        } else {\n            this.updateUser();\n        }\n    }\n\n    private createUser() {\n        this.accountService.register(this.form.value)\n            .pipe(first())\n            .subscribe({\n                next: () => {\n                    this.alertService.success('User added successfully', { keepAfterRouteChange: true });\n                    this.router.navigate(['../'], { relativeTo: this.route });\n                },\n                error: error => {\n                    this.alertService.error(error);\n                    this.loading = false;\n                }\n            });\n    }\n\n    private updateUser() {\n        this.accountService.update(this.id, this.form.value)\n            .pipe(first())\n            .subscribe({\n                next: () => {\n                    this.alertService.success('Update successful', { keepAfterRouteChange: true });\n                    this.router.navigate(['../../'], { relativeTo: this.route });\n                },\n                error: error => {\n                    this.alertService.error(error);\n                    this.loading = false;\n                }\n            });\n    }\n}","<h1 *ngIf=\"isAddMode\">Add User</h1>\n<h1 *ngIf=\"!isAddMode\">Edit User</h1>\n<form [formGroup]=\"form\" (ngSubmit)=\"onSubmit()\">\n    <div class=\"form-row\">\n        <div class=\"form-group col\">\n            <label for=\"firstName\">First Name</label>\n            <input type=\"text\" formControlName=\"firstName\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.firstName.errors }\" />\n            <div *ngIf=\"submitted && f.firstName.errors\" class=\"invalid-feedback\">\n                <div *ngIf=\"f.firstName.errors.required\">First Name is required</div>\n            </div>\n        </div>\n        <div class=\"form-group col\">\n            <label for=\"phonenumber\"> phone Number</label>\n            <input type=\"text\" formControlName=\"phonenumber\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.phonenumber.errors }\" />\n            <div *ngIf=\"submitted && f.phonenumber.errors\" class=\"invalid-feedback\">\n                <div *ngIf=\"f.phonenumber.errors.required\">phone Number is required</div>\n            </div>\n        </div>\n    </div>\n    <div class=\"form-row\">\n        <div class=\"form-group col\">\n            <label for=\"username\">email</label>\n            <input type=\"email\" formControlName=\"email\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.email.errors }\" />\n            <div *ngIf=\"submitted && f.email.errors\" class=\"invalid-feedback\">\n                <div *ngIf=\"f.email.errors.required\">email is required</div>\n            </div>\n        </div>\n        <div class=\"form-group col\">\n            <label for=\"password\">\n                Password\n                <em *ngIf=\"!isAddMode\">(Leave blank to keep the same password)</em>\n            </label>\n            <input type=\"password\" formControlName=\"password\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.password.errors }\" />\n            <div *ngIf=\"submitted && f.password.errors\" class=\"invalid-feedback\">\n                <div *ngIf=\"f.password.errors.required\">Password is required</div>\n                <div *ngIf=\"f.password.errors.minlength\">Password must be at least 6 characters</div>\n            </div>\n        </div>\n    </div>\n    <div class=\"form-group\">\n        <button [disabled]=\"loading\" class=\"btn btn-primary\">\n            <span *ngIf=\"loading\" class=\"spinner-border spinner-border-sm mr-1\"></span>\n            Save\n        </button>\n        <a routerLink=\"/users\" class=\"btn btn-link\">Cancel</a>\n    </div>\n</form>","import { Component } from '@angular/core';\n\n@Component({ templateUrl: 'layout.component.html' })\nexport class LayoutComponent { }","<div class=\"p-4\">\n    <div class=\"container\">\n        <router-outlet></router-outlet>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { first } from 'rxjs/operators';\n\nimport { AccountService } from '../services/account.service';\n\n@Component({ templateUrl: 'list.component.html' })\nexport class ListComponent implements OnInit {\n    users = null;\n\n    constructor(private accountService: AccountService) {}\n\n    ngOnInit() {\n        this.accountService.getAll()\n            .pipe(first())\n            .subscribe(users => this.users = users);\n    }\n\n    deleteUser(id: string) {\n        const user = this.users.find(x => x.id === id);\n        user.isDeleting = true;\n        this.accountService.delete(id)\n            .pipe(first())\n            .subscribe(() => this.users = this.users.filter(x => x.id !== id));\n    }\n}","<h1>Users</h1>\n<a routerLink=\"add\" class=\"btn btn-sm btn-success mb-2\">Add User</a>\n<table class=\"table table-striped\">\n    <thead>\n        <tr>\n            <th style=\"width: 30%\">full name</th>\n            <th style=\"width: 30%\">phone Number</th>\n            <th style=\"width: 30%\">email</th>\n            <th style=\"width: 10%\"></th>\n        </tr>\n    </thead>\n    <tbody>\n        <tr *ngFor=\"let user of users\">\n            <td>{{user.fullname}}</td>\n            <td>{{user.phonenumber}}</td>\n            <td>{{user.email}}</td>\n            <td style=\"white-space: nowrap\">\n                <a routerLink=\"edit/{{user.id}}\" class=\"btn btn-sm btn-primary mr-1\">Edit</a>\n                <button (click)=\"deleteUser(user.id)\" class=\"btn btn-sm btn-danger btn-delete-user\" [disabled]=\"user.isDeleting\">\n                    <span *ngIf=\"user.isDeleting\" class=\"spinner-border spinner-border-sm\"></span>\n                    <span *ngIf=\"!user.isDeleting\">Delete</span>\n                </button>\n            </td>\n        </tr>\n        <tr *ngIf=\"!users\">\n            <td colspan=\"4\" class=\"text-center\">\n                <span class=\"spinner-border spinner-border-lg align-center\"></span>\n            </td>\n        </tr>\n    </tbody>\n</table>","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { LayoutComponent } from './layout.component';\nimport { ListComponent } from './list.component';\nimport { AddEditComponent } from './add-edit.component';\n\nconst routes: Routes = [\n    {\n        path: '', component: LayoutComponent,\n        children: [\n            { path: '', component: ListComponent },\n            { path: 'add', component: AddEditComponent },\n            { path: 'edit/:id', component: AddEditComponent }\n        ]\n    }\n];\n\n@NgModule({\n    imports: [RouterModule.forChild(routes)],\n    exports: [RouterModule]\n})\nexport class UsersRoutingModule { }","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { UsersRoutingModule } from './users-routing.module';\nimport { ListComponent } from './list.component';\nimport { LayoutComponent } from './layout.component';\nimport { AddEditComponent } from './add-edit.component';\nimport { ReactiveFormsModule } from '@angular/forms';\n\n\n\n@NgModule({\n  declarations: [\n    ListComponent,\n    LayoutComponent,\n    AddEditComponent\n  ],\n  imports: [\n    CommonModule,\n    UsersRoutingModule,\n    ReactiveFormsModule\n\n  ]\n})\nexport class UsersModule { }\n"],"sourceRoot":"webpack:///"}